<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.demo.CookingRecipeDAO">
	
	<insert id="insertRecipe" parameterType="com.example.demo.CookingRecipeDTO">
		insert into recipe (
			title,
			r_code,
			uuid
		) values (
			#{title},
			#{r_code},
			(select uuid from user_info where mid=#{mid})
		)
	</insert>
	
	<insert id="insertRecipe_content" parameterType="com.example.demo.CookingRecipeDTO">
		insert into recipe_content (
			r_code,
			uuid,
			content
		) values (
			#{r_code},
			(select uuid from user_info where mid=#{mid}),
			#{content}
		)
	</insert>
	
	<insert id="insertRecipe_ingredient" parameterType="com.example.demo.CookingRecipeDTO">
		insert into recipe_ingredient(
			r_code,
			ingredient_code
		)
		select
			#{r_code},
			ingredient
		from (
			select
				INGREDIENT
			from (
				<foreach item="i" collection="ingredient" separator=" UNION ">
                    select #{i} as "INGREDIENT" from dual
                </foreach>
            )
		)
	</insert>
	
	<insert id="insertImg" parameterType="com.example.demo.CookingRecipeDTO">
		insert into recipe_img(
			img,
			r_code
		)values(
			#{foodImgBase64},
			#{r_code}
		)
	</insert>
	
	<select id="getRecipeAll" resultType="java.util.HashMap">
		select * from ( select  rownum RNUM, zxcvb.* from  (
				
			select
				r.r_code as "R_CODE",
				r.title as "TITLE",
				ri.img as "FOODIMG"
			from
				recipe r,
				recipe_img ri
			where
				r.r_code = ri.r_code

    <![CDATA[
        ) zxcvb) where  RNUM  >= 1  and RNUM <= 30
    ]]>
	</select>
	
	<delete id="deleteRecipe_ingredient" parameterType="com.example.demo.CookingRecipeDTO">
		delete from recipe_ingredient where r_code=#{r_code}
	</delete>
	
	<delete id="deleteRecipe" parameterType="com.example.demo.CookingRecipeDTO">
		delete from recipe where r_code=#{r_code}
	</delete>
	
	<delete id="deleteRecipe_content" parameterType="com.example.demo.CookingRecipeDTO">
		delete from recipe_img where r_code=#{r_code}
	</delete>
	
	<delete id="deleteRecipe_img" parameterType="com.example.demo.CookingRecipeDTO">
		delete from recipe_content where r_code=#{r_code}
	</delete>
	
	<delete id="deleteTemp_recipe_ingredient" parameterType="com.example.demo.CookingRecipeDTO">
		delete from temp_recipe_ingredient where r_code=#{r_code}
	</delete>
	
	<delete id="deleteTemp_recipe_content" parameterType="com.example.demo.CookingRecipeDTO">
		delete from temp_recipe_content where r_code=#{r_code}
	</delete>
	
	<delete id="deleteTemp_recipe" parameterType="com.example.demo.CookingRecipeDTO">
		delete from temp_recipe where r_code=#{r_code}
	</delete>	
	
	<insert id="insertTemp_recipe" parameterType="com.example.demo.CookingRecipeDTO">
		insert into temp_recipe (
			title,
			r_code,
			uuid
		) values (
			#{title},
			#{r_code},
			(select uuid from user_info where mid=#{mid})			
		)
	</insert>
	
	<insert id="insertTemp_recipe_content" parameterType="com.example.demo.CookingRecipeDTO">
		insert into temp_recipe_content (
			r_code,
			uuid,
			content
		) values (
			#{r_code},
			(select uuid from user_info where mid=#{mid}),
			#{content}
		)
	</insert>
	
	<select id="getTempRecipe" parameterType="String" resultType="java.util.HashMap">
			select
				r.r_code as "R_CODE",
				r.title as "TITLE",
				r.uuid as "UUID",
				rc.content as "CONTENT",
				i.ingredient_name as "INGREDIENT"
			from
				temp_recipe r
				left join temp_recipe_content rc on r.r_code=rc.r_code
				left join ingredient i on r.ingredient=i.ingredient_code
			where
				r.uuid=(select uuid from user_info where mid=#{mid})
	</select>
	
	<select id="getPost" parameterType="String" resultType="java.util.HashMap">
			select
				r.r_code as "R_CODE",
				r.title as "TITLE",
				r.uuid as "UUID",
				rc.content as "CONTENT",
				ri.img as "FOODIMG",
				u.mid as "MID"
			from
				recipe r,
				recipe_content rc,
				recipe_img ri,
				user_info u
			where
				r.r_code=rc.r_code
				and
				r.r_code=ri.r_code
				and
				r.uuid=u.uuid
				and
				r.r_code=#{r_code}
	</select>
	
	<select id="getIngredient" parameterType="String" resultType="java.util.HashMap">
		select
		    ingredient_name as "INGREDIENT"
		from
		    ingredient
		where
		    ingredient_code in( 
			    select
			        ri.ingredient_code
			    from
			        recipe r,
			        recipe_ingredient ri
			    where
			        r.r_code=ri.r_code
			        and
			        r.r_code=#{r_code}             
			)
	</select>
	
	<update id="updateTitle" parameterType="com.example.demo.CookingRecipeDTO">
		update recipe set title=#{title} where r_code=#{r_code}
	</update>
	
	<update id="updateContent" parameterType="com.example.demo.CookingRecipeDTO">
		update recipe_content set content=#{content} where r_code=#{r_code}
	</update>
	
	<update id="updateImg" parameterType="com.example.demo.CookingRecipeDTO">
		update recipe_img set img=#{img} where r_code=#{r_code}
	</update>
	
	<select id="checkHeart" parameterType="java.util.HashMap" resultType="int">
		select count(*) from recipe_heart where r_code=#{r_code} and uuid=(select uuid from user_info where mid=#{mid})
	</select>
	
	<update id="deleteHeart" parameterType="java.util.HashMap">
		delete from recipe_heart where r_code=#{r_code} and uuid=(select uuid from user_info where mid=#{mid})
	</update>
	
	<insert id="insertHeart" parameterType="java.util.HashMap">
		insert into recipe_heart (uuid, r_code) values ((select uuid from user_info where mid=#{mid}), #{r_code})
	</insert>
	
	<select id="checkJjim" parameterType="java.util.HashMap" resultType="int">
		select count(*) from recipe_jjim where r_code=#{r_code} and uuid=(select uuid from user_info where mid=#{mid})
	</select>
	
	<update id="deleteJjim" parameterType="java.util.HashMap">
		delete from recipe_jjim where r_code=#{r_code} and uuid=(select uuid from user_info where mid=#{mid})
	</update>
	
	<insert id="insertJjim" parameterType="java.util.HashMap">
		insert into recipe_jjim (uuid, r_code) values ((select uuid from user_info where mid=#{mid}), #{r_code})
	</insert>
	
	<select id="getJjim" parameterType="String" resultType="java.util.HashMap">
		select * from ( select  rownum RNUM, zxcvb.* from  (
		
			select
				r.r_code as "R_CODE",
				r.title as "TITLE",
				ri.img as "FOODIMG"
			from
				recipe r,
				recipe_img ri
			where
				r.r_code = ri.r_code
				and
				r.r_code in (select r_code from recipe_jjim rj where rj.uuid=(select ui.uuid from user_info ui where mid=#{mid}))

	    <![CDATA[
	        ) zxcvb) where  RNUM  >= 1  and RNUM <= 30
	    ]]>
	</select>
	
	<select id="search" parameterType="com.example.demo.CookingRecipeDTO" resultType="java.util.HashMap">
		select * from ( select  rownum RNUM, zxcvb.* from  (
		
			select
				r.r_code as "R_CODE",
				r.title as "TITLE",
				ri.img as "FOODIMG"
			from
				recipe r,
				recipe_img ri
			where
				r.r_code = ri.r_code
				<if test="ingredient!=null and ingredient.size>0">
	                and
	                not exists( 
	                    select 1 from recipe_ingredient where ingredient_code not in (	
			                <foreach item="i" collection="ingredient" separator=" , ">
			                    #{i}
			                </foreach>			
	                    )  
	                )
                </if>
	    <![CDATA[
	        ) zxcvb) where  RNUM  >= 1  and RNUM <= 30
	    ]]>
	</select>
	
	<select id="getMyPost" parameterType="String" resultType="java.util.HashMap">
		select
			r.r_code as "R_CODE",
			r.title as "TITLE",
			ri.img as "FOODIMG"
		from
			recipe r,
			recipe_img ri
		where
			r.r_code = ri.r_code
			and
			r.uuid = (select uuid from user_info where mid=#{mid})
	</select>
	
	
</mapper>