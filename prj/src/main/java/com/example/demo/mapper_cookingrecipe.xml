<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.demo.CookingRecipeDAO">
	
	<insert id="insertRecipe" parameterType="com.example.demo.CookingRecipeDTO">
		insert into recipe (
			title,
			r_code,
			uuid
		) values (
			#{title},
			#{r_code},
			(select uuid from user_info where mid=#{mid})			
		)
	</insert>
	
	<insert id="insertRecipe_content" parameterType="com.example.demo.CookingRecipeDTO">
		insert into recipe_content (
			r_code,
			uuid,
			content
		) values (
			#{r_code},
			(select uuid from user_info where mid=#{mid}),
			#{content}
		)
	</insert>
	
	<select id="getRecipe" resultType="java.util.HashMap">
		select * from ( select  rownum RNUM, zxcvb.* from  (
				
			select
				r.r_code as "R_CODE",
				r.title as "TITLE",
				r.uuid as "UUID",
				r.recommend as "RECOMMEND",
				rc.content as "CONTENT",
				ri.img as "FOODIMG"
			from
				recipe r,
				recipe_content rc,
				recipe_img ri
			where
				r.r_code = rc.r_code
				and
				r.r_code = ri.r_code

    <![CDATA[
        ) zxcvb) where  RNUM  >= 1  and RNUM <= 30
    ]]>
	</select>
	
	<insert id="insertImg" parameterType="com.example.demo.CookingRecipeDTO">
		insert into recipe_img(
			img,
			r_code
		)values(
			#{foodImgBase64},
			#{r_code}
		)
	</insert>
	
	<delete id="deleteTemp_recipe" parameterType="com.example.demo.CookingRecipeDTO">
		delete from temp_recipe where r_code=#{r_code}
	</delete>
	
	<delete id="deleteTemp_recipe_content" parameterType="com.example.demo.CookingRecipeDTO">
		delete from temp_recipe_content where r_code=#{r_code}
	</delete>
	
	<delete id="deleteTemp_recipe_img" parameterType="com.example.demo.CookingRecipeDTO">
		delete from temp_recipe_img where r_code=#{r_code}
	</delete>
	
	
	<insert id="insertTemp_recipe" parameterType="com.example.demo.CookingRecipeDTO">
		insert into temp_recipe (
			title,
			r_code,
			uuid
		) values (
			#{title},
			#{r_code},
			(select uuid from user_info where mid=#{mid})			
		)
	</insert>
	
	<insert id="insertTemp_recipe_content" parameterType="com.example.demo.CookingRecipeDTO">
		insert into temp_recipe_content (
			r_code,
			uuid,
			content
		) values (
			#{r_code},
			(select uuid from user_info where mid=#{mid}),
			#{content}
		)
	</insert>
	
	<insert id="insertTemp_recipe_img" parameterType="com.example.demo.CookingRecipeDTO">
		insert into temp_recipe_img(
			img,
			r_code
		)values(
			#{foodImgBase64},
			#{r_code}
		)
	</insert>
	
	<select id="getTempRecipe" parameterType="String" resultType="java.util.HashMap">
			select
				r.r_code as "R_CODE",
				r.title as "TITLE",
				r.uuid as "UUID",
				rc.content as "CONTENT",
				ri.img as "FOODIMG"
			from
				temp_recipe r
				left join temp_recipe_content rc on r.r_code=rc.r_code
				left join temp_recipe_img ri on r.r_code=ri.r_code
			where
				r.uuid=(select uuid from user_info where mid=#{mid})
	</select>
	
</mapper>